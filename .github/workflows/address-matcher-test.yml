name: Address Matcher Test

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'uk_address_matcher/**'
      - 'tests/**'

jobs:
  test-address-matcher:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest

    - name: Run address matcher test
      id: run-test
      run: python .github/workflows/run_address_test.py

    - name: Extract match rate
      id: extract-rate
      run: |
        # Extract match rate from the test output
        MATCH_RATE=$(grep -o "Match rate: [0-9.]\+%" test_results.txt || echo "Match rate: Not found")
        echo "match_rate=$MATCH_RATE" >> $GITHUB_OUTPUT

        # Check if there were any mismatches
        if grep -q "Details of mismatches:" test_results.txt; then
          echo "has_mismatches=true" >> $GITHUB_OUTPUT
          # Extract mismatch details (limited to avoid too large comments)
          MISMATCHES=$(sed -n '/Details of mismatches:/,/^$/p' test_results.txt)
          echo "mismatches<<EOF" >> $GITHUB_OUTPUT
          echo "$MISMATCHES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "has_mismatches=false" >> $GITHUB_OUTPUT
        fi

    - name: Comment on PR
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const matchRate = '${{ steps.extract-rate.outputs.match_rate }}';
          const hasMismatches = '${{ steps.extract-rate.outputs.has_mismatches }}' === 'true';
          const mismatches = `${{ steps.extract-rate.outputs.mismatches }}`;

          let body = `## üìä Address Matcher Test Results\n\n**${matchRate}**\n\n`;

          if (hasMismatches) {
            body += `### ‚ö†Ô∏è Some addresses were not matched correctly:\n\n\`\`\`\n${mismatches}\n\`\`\``;
          } else {
            body += `### ‚úÖ All addresses were matched correctly!`;
          }

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });