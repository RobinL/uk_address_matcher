{
    "link_type": "link_only",
    "probability_two_random_records_match": 3e-08,
    "retain_matching_columns": true,
    "retain_intermediate_calculation_columns": true,
    "additional_columns_to_retain": [],
    "sql_dialect": "duckdb",
    "linker_uid": "el7aaytu",
    "em_convergence": 0.0001,
    "max_iterations": 25,
    "bayes_factor_column_prefix": "bf_",
    "term_frequency_adjustment_column_prefix": "tf_",
    "comparison_vector_value_column_prefix": "gamma_",
    "unique_id_column_name": "unique_id",
    "source_dataset_column_name": "source_dataset",
    "blocking_rules_to_generate_predictions": [
        {
            "blocking_rule": "l.\"postcode\" = r.\"postcode\"",
            "sql_dialect": "duckdb"
        }
    ],
    "comparisons": [
        {
            "output_column_name": "flat_positional",
            "comparison_levels": [
                {
                    "sql_condition": "\"flat_positional_l\" IS NULL AND \"flat_positional_r\" IS NULL",
                    "label_for_charts": "Null",
                    "fix_m_probability": false,
                    "fix_u_probability": false,
                    "is_null_level": true
                },
                {
                    "sql_condition": "\"flat_positional_l\" = \"flat_positional_r\"",
                    "label_for_charts": "Exact match",
                    "m_probability": 0.95,
                    "u_probability": 0.01,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 1,
                    "u_probability": 32,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                }
            ],
            "comparison_description": "CustomComparison"
        },
        {
            "output_column_name": "numeric_token_1",
            "comparison_levels": [
                {
                    "sql_condition": "\"numeric_token_1_l\" IS NULL OR \"numeric_token_1_r\" IS NULL",
                    "label_for_charts": "numeric_token_1 is NULL",
                    "fix_m_probability": false,
                    "fix_u_probability": false,
                    "is_null_level": true
                },
                {
                    "sql_condition": "\"numeric_token_1_l\" = \"numeric_token_1_r\"",
                    "label_for_charts": "Exact match",
                    "m_probability": 0.95,
                    "u_probability": 0.01,
                    "fix_m_probability": true,
                    "fix_u_probability": true,
                    "tf_adjustment_column": "numeric_token_1",
                    "tf_adjustment_weight": 1.0
                },
                {
                    "sql_condition": "\"numeric_1_alt_l\" = \"numeric_token_1_r\" OR \"numeric_token_1_l\" = \"numeric_1_alt_r\" OR \"numeric_1_alt_l\" = \"numeric_1_alt_r\"",
                    "label_for_charts": "Exact match on alt numeric token",
                    "m_probability": 0.9,
                    "u_probability": 0.01,
                    "fix_m_probability": true,
                    "fix_u_probability": true,
                    "tf_adjustment_column": "numeric_token_1",
                    "tf_adjustment_weight": 0.5
                },
                {
                    "sql_condition": "\"numeric_token_2_l\" = \"numeric_token_1_r\"",
                    "label_for_charts": "Exact match inverted numbers",
                    "m_probability": 3,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "\"numeric_token_1_l\" IS NULL OR \"numeric_token_1_r\" IS NULL",
                    "label_for_charts": "Null",
                    "m_probability": 1,
                    "u_probability": 16,
                    "fix_m_probability": false,
                    "fix_u_probability": false
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 1,
                    "u_probability": 256,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                }
            ],
            "comparison_description": "CustomComparison"
        },
        {
            "output_column_name": "numeric_token_2",
            "comparison_levels": [
                {
                    "sql_condition": "\"numeric_token_2_l\" IS NULL AND \"numeric_token_2_r\" IS NULL",
                    "label_for_charts": "Null",
                    "fix_m_probability": false,
                    "fix_u_probability": false,
                    "is_null_level": true
                },
                {
                    "sql_condition": "\"numeric_token_2_l\" = \"numeric_token_2_r\"",
                    "label_for_charts": "Exact match",
                    "m_probability": 0.8,
                    "u_probability": 0.001,
                    "fix_m_probability": true,
                    "fix_u_probability": true,
                    "tf_adjustment_column": "numeric_token_2",
                    "tf_adjustment_weight": 1.0
                },
                {
                    "sql_condition": "\"numeric_token_1_l\" = \"numeric_token_2_r\"",
                    "label_for_charts": "Exact match inverted numbers",
                    "m_probability": 1,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "\"numeric_token_2_l\" IS NULL OR \"numeric_token_2_r\" IS NULL",
                    "label_for_charts": "Null",
                    "m_probability": 1,
                    "u_probability": 16,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 1,
                    "u_probability": 256,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                }
            ],
            "comparison_description": "CustomComparison"
        },
        {
            "output_column_name": "numeric_token_3",
            "comparison_levels": [
                {
                    "sql_condition": "\"numeric_token_3_l\" IS NULL AND \"numeric_token_3_r\" IS NULL",
                    "label_for_charts": "Null",
                    "fix_m_probability": false,
                    "fix_u_probability": false,
                    "is_null_level": true
                },
                {
                    "sql_condition": "\"numeric_token_3_l\" = \"numeric_token_3_r\"",
                    "label_for_charts": "Exact match",
                    "m_probability": 0.6,
                    "u_probability": 0.0001,
                    "fix_m_probability": false,
                    "fix_u_probability": false,
                    "tf_adjustment_column": "numeric_token_3",
                    "tf_adjustment_weight": 1.0
                },
                {
                    "sql_condition": "\"numeric_token_2_l\" = \"numeric_token_3_r\"",
                    "label_for_charts": "Exact match inverted",
                    "m_probability": 0.3,
                    "u_probability": 0.0025,
                    "fix_m_probability": false,
                    "fix_u_probability": false,
                    "tf_adjustment_column": "numeric_token_3",
                    "tf_adjustment_weight": 1.0
                },
                {
                    "sql_condition": "\"numeric_token_3_l\" IS NULL OR \"numeric_token_3_r\" IS NULL",
                    "label_for_charts": "Null",
                    "m_probability": 1,
                    "u_probability": 16,
                    "fix_m_probability": false,
                    "fix_u_probability": false
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 1,
                    "u_probability": 256,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                }
            ],
            "comparison_description": "CustomComparison"
        },
        {
            "output_column_name": "token_rel_freq_arr",
            "comparison_levels": [
                {
                    "sql_condition": "\"token_rel_freq_arr_l\" IS NULL OR \"token_rel_freq_arr_r\" IS NULL or length(\"token_rel_freq_arr_l\") = 0 or length(\"token_rel_freq_arr_r\") = 0",
                    "label_for_charts": "Null",
                    "fix_m_probability": false,
                    "fix_u_probability": false,
                    "is_null_level": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+30",
                    "label_for_charts": " > 1e+30",
                    "m_probability": 46340.95001184158,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+29",
                    "label_for_charts": " > 1e+29",
                    "m_probability": 38967.93874440916,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+28",
                    "label_for_charts": " > 1e+28",
                    "m_probability": 32768.0,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+27",
                    "label_for_charts": " > 1e+27",
                    "m_probability": 27554.493735033717,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+26",
                    "label_for_charts": " > 1e+26",
                    "m_probability": 23170.47500592079,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+25",
                    "label_for_charts": " > 1e+25",
                    "m_probability": 19483.96937220458,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+24",
                    "label_for_charts": " > 1e+24",
                    "m_probability": 16384.0,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+23",
                    "label_for_charts": " > 1e+23",
                    "m_probability": 13777.246867516858,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+22",
                    "label_for_charts": " > 1e+22",
                    "m_probability": 11585.237502960395,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+21",
                    "label_for_charts": " > 1e+21",
                    "m_probability": 9741.98468610229,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+20",
                    "label_for_charts": " > 1e+20",
                    "m_probability": 8192.0,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+19",
                    "label_for_charts": " > 1e+19",
                    "m_probability": 6888.623433758429,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+18",
                    "label_for_charts": " > 1e+18",
                    "m_probability": 5792.618751480198,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+17",
                    "label_for_charts": " > 1e+17",
                    "m_probability": 4870.992343051145,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+16",
                    "label_for_charts": " > 1e+16",
                    "m_probability": 4096.0,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+15",
                    "label_for_charts": " > 1e+15",
                    "m_probability": 3444.3117168792146,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+14",
                    "label_for_charts": " > 1e+14",
                    "m_probability": 2896.309375740099,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+13",
                    "label_for_charts": " > 1e+13",
                    "m_probability": 2435.4961715255727,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+12",
                    "label_for_charts": " > 1e+12",
                    "m_probability": 2048.0,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+11",
                    "label_for_charts": " > 1e+11",
                    "m_probability": 1024.0,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+10",
                    "label_for_charts": " > 1e+10",
                    "m_probability": 512.0,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+9",
                    "label_for_charts": " > 1e+9",
                    "m_probability": 256.0,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+8",
                    "label_for_charts": " > 1e+8",
                    "m_probability": 128.0,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+7",
                    "label_for_charts": " > 1e+7",
                    "m_probability": 64.0,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+6",
                    "label_for_charts": " > 1e+6",
                    "m_probability": 32.0,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+5",
                    "label_for_charts": " > 1e+5",
                    "m_probability": 16.0,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+4",
                    "label_for_charts": " > 1e+4",
                    "m_probability": 8.0,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+3",
                    "label_for_charts": " > 1e+3",
                    "m_probability": 4.0,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+2",
                    "label_for_charts": " > 1e+2",
                    "m_probability": 2.0,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+1",
                    "label_for_charts": " > 1e+1",
                    "m_probability": 1.0,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) > 1e+0",
                    "label_for_charts": " > 1e+0",
                    "m_probability": 0.5,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) < 1e-1",
                    "label_for_charts": " < 1e-1",
                    "m_probability": 0.25,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) < 1e-2",
                    "label_for_charts": " < 1e-2",
                    "m_probability": 0.125,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) < 1e-3",
                    "label_for_charts": " < 1e-3",
                    "m_probability": 0.0625,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                token_rel_freq_arr_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(token_rel_freq_arr_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        token_rel_freq_arr_l,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        token_rel_freq_arr_r,\n                        y -> NOT array_contains(\n                                list_transform(token_rel_freq_arr_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.33\n    )) < 1e-4",
                    "label_for_charts": " < 1e-4",
                    "m_probability": 0.03125,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 1,
                    "u_probability": 256,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                }
            ],
            "comparison_description": "CustomComparison"
        },
        {
            "output_column_name": "common_end_tokens",
            "comparison_levels": [
                {
                    "sql_condition": "\"common_end_tokens_l\" IS NULL OR \"common_end_tokens_r\" IS NULL or length(\"common_end_tokens_l\") = 0 or length(\"common_end_tokens_r\") = 0",
                    "label_for_charts": "Null",
                    "fix_m_probability": false,
                    "fix_u_probability": false,
                    "is_null_level": true
                },
                {
                    "sql_condition": "(\n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                common_end_tokens_l,\n                x -> CASE\n                        WHEN array_contains(\n                            list_transform(common_end_tokens_r, y -> y.tok),\n                            x.tok\n                        )\n                        THEN x.rel_freq\n                        ELSE 1.0\n                    END\n            )\n        ),\n        (p, q) -> p * q\n    ) * \n    list_reduce(\n        list_prepend(\n            1.0,\n            list_transform(\n                list_concat(\n                    array_filter(\n                        common_end_tokens_l,\n                        y -> NOT array_contains(\n                                list_transform(common_end_tokens_r, x -> x.tok),\n                                y.tok\n                            )\n                    ),\n                    array_filter(\n                        common_end_tokens_r,\n                        y -> NOT array_contains(\n                                list_transform(common_end_tokens_l, x -> x.tok),\n                                y.tok\n                            )\n                    )\n                ),\n                x -> x.rel_freq\n            )\n        ),\n        (p, q) -> p / q^0.0\n    )) < 1e-2",
                    "label_for_charts": "<1e-2",
                    "m_probability": 4,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 1,
                    "u_probability": 1.5,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                }
            ],
            "comparison_description": "CustomComparison"
        },
        {
            "output_column_name": "postcode",
            "comparison_levels": [
                {
                    "sql_condition": "\"postcode_l\" IS NULL AND \"postcode_r\" IS NULL",
                    "label_for_charts": "Null",
                    "fix_m_probability": false,
                    "fix_u_probability": false,
                    "is_null_level": true
                },
                {
                    "sql_condition": "postcode_l = postcode_r",
                    "label_for_charts": "Exact",
                    "m_probability": 3000000.0,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "levenshtein(postcode_l, postcode_r) <= 1",
                    "label_for_charts": "Lev <= 1",
                    "m_probability": 1000000.0,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "levenshtein(postcode_l, postcode_r) <= 2",
                    "label_for_charts": "Lev <=2",
                    "m_probability": 500000.0,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "split_part(postcode_l, ' ', 1) = split_part(postcode_r, ' ', 1)",
                    "label_for_charts": "District",
                    "m_probability": 3000,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "split_part(postcode_l, ' ', 2) = split_part(postcode_r, ' ', 2)",
                    "label_for_charts": "Unit not District",
                    "m_probability": 2000,
                    "u_probability": 1,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 1,
                    "u_probability": 64,
                    "fix_m_probability": true,
                    "fix_u_probability": true
                }
            ],
            "comparison_description": "CustomComparison"
        }
    ]
}